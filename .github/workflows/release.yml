name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write # to be able to publish a GitHub release
      issues: write # to be able to comment on released issues
      pull-requests: write # to be able to comment on released pull requests
      packages: write # to be able to publish GitHub packages
    timeout-minutes: 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}
          restore-keys: ${{ runner.os }}-bun-

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
              
      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build packages
        run: bun run build:packages

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64, arm64

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build, release, publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKER_REGISTRY_USER: ${{ github.repository_owner }}
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
          WEBSOCKET_API_PORTAINER_WEBHOOK_URL: ${{ secrets.WEBSOCKET_API_PORTAINER_WEBHOOK_URL }}
          DISCORD_BOT_PORTAINER_WEBHOOK_URL: ${{ secrets.DISCORD_BOT_PORTAINER_WEBHOOK_URL }}
        run: bunx multi-semantic-release

      - name: Purge outdated images
        uses: snok/container-retention-policy@v3.0.0
        with:
          account: ${{ github.repository_owner }}
          token: ${{ secrets.DELETE_PACKAGES_TOKEN }}
          image-names: "revanced-bot-*"
          keep-n-most-recent: 5
          cut-off: 3M
